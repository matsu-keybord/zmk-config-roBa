#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 3
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <3>;
    scroll-layers = <4>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        zoom_in {
            bindings = <&kp LC(MINUS)>;
            key-positions = <19 20>;
            layers = <0>;
        };

        zoom_out {
            bindings = <&kp LC(PLUS)>;
            key-positions = <19 18>;
            layers = <0>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off MOUSE>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_exit_AML_on_tap: mt_exit_AML_on_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_exit_AML_ON_TAP";
            bindings = <&kp>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
        };

        msc_up_down: msc_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "MSC_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&kp Q         &kp W      &kp E         &kp R            &kp T                                        &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A         &kp S      &kp D         &kp F            &kp G        &mkp RCLK       &kp MINUS       &kp H      &kp J  &kp K      &kp L    &mt RCTRL COLON
&kp Z         &kp X      &kp C         &kp V            &lt 5 B      &lt 3 TAB       &kp APOSTROPHE  &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_WIN  &kp LCTRL  &kp LEFT_ALT  &lt 2 LA(TILDE)  &lt 1 SPACE  &kp LSHIFT      &kp BACKSPACE   &kp ENTER                             &kp DEL
            >;

            sensor-bindings = <&msc_up_down>;
        };

        NUM {
            bindings = <
&kp MINUS  &kp N7        &kp N8        &kp N9        &kp PLUS                             &kp CARET         &kp AMPERSAND      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTERISK  &trans      &kp UNDER  &kp EXCLAMATION   &kp AT_SIGN        &kp DLLR              &kp PERCENT            &kp PIPE
&kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &trans      &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH
&trans     &trans        &trans        &trans        &trans        &trans      &trans     &trans                                                                            &kp HASH
            >;

            sensor-bindings = <&msc_up_down>;
        };

        FUNCTION {
            bindings = <
&trans         &kp LA(LEFT)   &kp LC(PAGE_UP)    &kp LA(RIGHT)  &kp LC(LS(T))                            &kp F1   &kp F2   &kp F3   &kp F4   &trans
&kp LC(GRAVE)  &kp LC(LS(S))  &kp LC(PAGE_DOWN)  &kp LC(LS(F))  &kp LG(PRINTSCREEN)  &trans      &trans  &kp F5   &kp F6   &kp F7   &kp F8   &kp F9
&trans         &trans         &trans             &trans         &trans               &trans      &trans  &kp F10  &kp F11  &kp F12  &kp F13  &trans
&trans         &trans         &trans             &trans         &trans               &trans      &trans  &trans                              &trans
            >;

            sensor-bindings = <&msc_up_down>;
        };

        MOUSE {
            bindings = <
&kp ESCAPE  &none    &none       &none     &none                        &none   &mkp MB4  &mkp MB3      &mkp MB5   &trans
&kp HOME    &kp END  &kp C_MENU  &kp LWIN  &kp END  &trans      &trans  &none   &mkp MB1  &kp UP_ARROW  &mkp MB2   &none
&trans      &trans   &trans      &trans    &trans   &trans      &trans  &none   &kp LEFT  &kp DOWN      &kp RIGHT  &trans
&trans      &trans   &trans      &trans    &trans   &trans      &trans  &trans                                     &trans
            >;

            sensor-bindings = <&msc_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                      &bt BT_SEL 0  &bt BT_SEL 1        &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans                  &trans        &kp RA(LEFT_ARROW)  &trans        &kp RA(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader             &trans        &trans              &trans        &trans         &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &lt_to_layer_0 0 ENTER  &trans                                                         &bt BT_CLR_ALL
            >;
        };
    };
};
